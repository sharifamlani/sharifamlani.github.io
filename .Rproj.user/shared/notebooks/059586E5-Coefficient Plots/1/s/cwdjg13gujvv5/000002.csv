"0","# Turns a Regression into a data frame"
"0","library(lmtest)"
"2","Loading required package: zoo
"
"2","
Attaching package: ‘zoo’

"
"2","The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

"
"0","library(sandwich)"
"0","library(ggplot2)"
"0",""
"0","#Turns a Regression into a data frame"
"0","Model.DF <- function(Model, Robust.SE = NULL) {"
"0","  "
"0","  #Extract Coefficients"
"0","  Model.Output <- as.data.frame(coef(summary(Model)))"
"0","  Model.Output$Label <- rownames(Model.Output)"
"0","  rownames(Model.Output) <- NULL"
"0","  "
"0","  #Generate Confidence Intervals"
"0","  CI <- as.data.frame(confint(Model, variable.names(Model), level=0.95))"
"0","  CI$Label <- rownames(CI)"
"0","  rownames(CI) <- NULL"
"0","  "
"0","  #Merge Model and CIs together "
"0","  Model.Output.Final <- merge(x = Model.Output, y = CI, by =c(""Label""))"
"0","  "
"0","  #Name the columns numeric"
"0","  colnames(Model.Output.Final) <- c(""Label"", ""Coeff"", ""SE"", ""t.value"", ""P.Value"", ""lower"", ""upper"")"
"0","  "
"0","  Model.Output.Final$Sig.05 <- ifelse(Model.Output.Final$P.Value <= .05, 1,0)"
"0","  Model.Output.Final$Sig.10 <- ifelse(Model.Output.Final$P.Value <= .10, 1,0)"
"0","  "
"0","  #Adjusted R Squared"
"0","  Model.Output.Final$AdJ.R2 <- summary(Model)$adj.r.squared"
"0","  "
"0","  #Dependent Variable"
"0","  Model.Output.Final$DV <- all.vars(formula(Model))[1]"
"0","  "
"0","  #Check for NA's in Model"
"0","  for(n in names(coef(Model))){"
"0","    if(is.na(Model$coefficients[[n]]) == T){"
"0","      newRow <- data.frame(Label=n, "
"0","                           Coeff = NA, "
"0","                           SE = NA, "
"0","                           t.value = NA,"
"0","                           P.Value = NA,"
"0","                           lower = NA,"
"0","                           upper = NA,"
"0","                           AdJ.R2 = NA, "
"0","                           Sig.05 = NA,"
"0","                           Sig.10 = NA,"
"0","                           DV=all.vars(formula(Model))[1])"
"0","      "
"0","      Model.Output.Final <- rbind(Model.Output.Final, newRow)"
"0","      "
"0","    }"
"0","  }"
"0","  "
"0","  #Option for Robust Standard Errors"
"0","  if(is.null(Robust.SE) == F){"
"0","    library(sandwich)"
"0","    x<- coeftest(Model, vcov = sandwich::vcovHC(Model, type=Robust.SE))"
"0","    xr<- setNames(data.frame(x[1:dim(x)[1], 2]), c(""Robust Standard Errors""))"
"0","    xr$Label<- rownames(xr); rownames(xr) <- NULL"
"0","    "
"0","    Model.Output.Final <- merge(Model.Output.Final, xr, by = ""Label"")"
"0","    "
"0","  }"
"0","  "
"0","  return(Model.Output.Final)"
"0","  "
"0","}"
