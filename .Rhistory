knitr::opts_chunk$set(echo = TRUE)
# Turns a Regression into a data frame
library(lmtest)
library(sandwich)
library(ggplot2)
#Turns a Regression into a data frame
Model.DF <- function(Model, Robust.SE = NULL) {
#Extract Coefficients
Model.Output <- as.data.frame(coef(summary(Model)))
Model.Output$Label <- rownames(Model.Output)
rownames(Model.Output) <- NULL
#Generate Confidence Intervals
CI <- as.data.frame(confint(Model, variable.names(Model), level=0.95))
CI$Label <- rownames(CI)
rownames(CI) <- NULL
#Merge Model and CIs together
Model.Output.Final <- merge(x = Model.Output, y = CI, by =c("Label"))
#Name the columns numeric
colnames(Model.Output.Final) <- c("Label", "Coeff", "SE", "t.value", "P.Value", "lower", "upper")
Model.Output.Final$Sig.05 <- ifelse(Model.Output.Final$P.Value <= .05, 1,0)
Model.Output.Final$Sig.10 <- ifelse(Model.Output.Final$P.Value <= .10, 1,0)
#Adjusted R Squared
Model.Output.Final$AdJ.R2 <- summary(Model)$adj.r.squared
#Dependent Variable
Model.Output.Final$DV <- all.vars(formula(Model))[1]
#Check for NA's in Model
for(n in names(coef(Model))){
if(is.na(Model$coefficients[[n]]) == T){
newRow <- data.frame(Label=n,
Coeff = NA,
SE = NA,
t.value = NA,
P.Value = NA,
lower = NA,
upper = NA,
AdJ.R2 = NA,
Sig.05 = NA,
Sig.10 = NA,
DV=all.vars(formula(Model))[1])
Model.Output.Final <- rbind(Model.Output.Final, newRow)
}
}
#Option for Robust Standard Errors
if(is.null(Robust.SE) == F){
library(sandwich)
x<- coeftest(Model, vcov = sandwich::vcovHC(Model, type=Robust.SE))
xr<- setNames(data.frame(x[1:dim(x)[1], 2]), c("Robust Standard Errors"))
xr$Label<- rownames(xr); rownames(xr) <- NULL
Model.Output.Final <- merge(Model.Output.Final, xr, by = "Label")
}
return(Model.Output.Final)
}
# Create a fake data set
library(randomNames)
set.seed(1992)
age <- sample(18:30, 50, replace=TRUE)
score <- sample(1:100, 50, replace=TRUE)
year <- sample(c("first", "second", "third", "fourth"), 50, replace=TRUE)
major <- sample(c("ps", "cs", "ir", "stats"), 50, replace =TRUE)
attend <- sample(c("yes", "no"), 50, replace=TRUE)
office <- sample(c("always", "sometimes", "never", "not applicable", "don't know"), 50, replace=TRUE)
gender <- sample(c("male", "female"), 50, replace=TRUE)
student <- randomNames(50)
class <- data.frame(age, score, year, major, attend, office, gender, student)
# Example
Result <- lm(score ~ age + year + attend + gender, data=class); summary(Result)
Result.df <-Model.DF(Result)
# ggplot
ggplot(Result.df, aes(x = Label, y = Coeff, ymin = lower, ymax = upper)) +
geom_pointrange() +
coord_flip ()+
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
guides(color=FALSE) +
theme_bw() +
labs(title = "Test Scores Predictors",
subtitle = "Model 1a",
y = "Test Scores",
caption = "add a caption") +
theme(plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5),
axis.title.y=element_blank(),
axis.title = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14))
library(lmtest)
Model.DF(Result, Robust.SE = "HC3")
